import json
import uuid
from datetime import datetime
import logging
import sys

# Konfigurer logging
logging.basicConfig(
    level=logging.INFO,  # Logg nivå: INFO, WARNING, ERROR, CRITICAL
    format="%(asctime)s - %(levelname)s - %(message)s",  # Loggformat
    handlers=[
        logging.FileHandler("api_key_management.log"),  # Logg til fil
        logging.StreamHandler(sys.stdout)  # Logg til konsoll
    ]
)

# Funksjon for å opprette en API-nøkkel
def create_api_key(name, permissions):
    try:
        api_key = str(uuid.uuid4())
        created_at = datetime.now().isoformat()
        
        key_details = {
            "name": name,
            "api_key": api_key,
            "permissions": permissions,
            "created_at": created_at,
            "is_active": True
        }
        
        try:
            with open("api_keys.json", "r") as file:
                keys = json.load(file)
        except FileNotFoundError:
            keys = []
        
        keys.append(key_details)
        
        with open("api_keys.json", "w") as file:
            json.dump(keys, file, indent=4)
        
        logging.info(f"API-nøkkel opprettet: {key_details}")
        return key_details
    except Exception as e:
        logging.error(f"Feil ved opprettelse av API-nøkkel: {e}", exc_info=True)
        return None

# Funksjon for å slette en API-nøkkel
def delete_api_key(api_key):
    try:
        with open("api_keys.json", "r") as file:
            keys = json.load(file)
    except FileNotFoundError:
        logging.warning("Fil 'api_keys.json' ikke funnet.")
        return False
    
    keys = [key for key in keys if key["api_key"] != api_key]
    
    with open("api_keys.json", "w") as file:
        json.dump(keys, file, indent=4)
    
    logging.info(f"API-nøkkel slettet: {api_key}")
    return True

# Funksjon for å hente detaljer om en API-nøkkel
def get_api_key_details(api_key):
    try:
        with open("api_keys.json", "r") as file:
            keys = json.load(file)
    except FileNotFoundError:
        logging.warning("Fil 'api_keys.json' ikke funnet.")
        return None
    
    for key in keys:
        if key["api_key"] == api_key:
            logging.info(f"Detaljer hentet for API-nøkkel: {api_key}")
            return key
    
    logging.warning(f"API-nøkkel ikke funnet: {api_key}")
    return None

# Funksjon for å deaktivere en API-nøkkel
def deactivate_api_key(api_key):
    try:
        with open("api_keys.json", "r") as file:
            keys = json.load(file)
    except FileNotFoundError:
        logging.warning("Fil 'api_keys.json' ikke funnet.")
        return False
    
    for key in keys:
        if key["api_key"] == api_key:
            key["is_active"] = False
            break
    
    with open("api_keys.json", "w") as file:
        json.dump(keys, file, indent=4)
    
    logging.info(f"API-nøkkel deaktivert: {api_key}")
    return True

# Funksjon for å liste alle API-nøkler
def list_all_api_keys():
    try:
        with open("api_keys.json", "r") as file:
            keys = json.load(file)
    except FileNotFoundError:
        logging.warning("Fil 'api_keys.json' ikke funnet.")
        return []
    
    logging.info("Alle API-nøkler listet.")
    return keys

# Funksjon for å oppdatere en API-nøkkel
def update_api_key(api_key, new_permissions):
    try:
        with open("api_keys.json", "r") as file:
            keys = json.load(file)
    except FileNotFoundError:
        logging.warning("Fil 'api_keys.json' ikke funnet.")
        return False
    
    for key in keys:
        if key["api_key"] == api_key:
            key["permissions"] = new_permissions
            break
    
    with open("api_keys.json", "w") as file:
        json.dump(keys, file, indent=4)
    
    logging.info(f"API-nøkkel oppdatert: {api_key}")
    return True

# Eksempel på bruk:
if __name__ == "__main__":
    # Opprett en ny API-nøkkel
    new_key = create_api_key("MyApp", ["read", "write"])
    print("New API Key Created:", new_key)

    # Hent detaljer om en API-nøkkel
    details = get_api_key_details(new_key["api_key"])
    print("API Key Details:", details)

    # Oppdater en API-nøkkel
    updated = update_api_key(new_key["api_key"], ["read"])
    print("API Key Updated:", updated)

    # Deaktiver en API-nøkkel
    deactivated = deactivate_api_key(new_key["api_key"])
    print("API Key Deactivated:", deactivated)

    # Slett en API-nøkkel
    deleted = delete_api_key(new_key["api_key"])
    print("API Key Deleted:", deleted)

    # List alle API-nøkler
    all_keys = list_all_api_keys()
    print("All API Keys:", all_keys)
